Directory contains routines for processing GP time series data
and converting them to vertically inteprolated data.

gppick:
   Routine takes as input a file (inp.pg). This file contains
   the location of GP files, a lon, lat position
   and a station ID (name of ID is up to you). It searches through
   the directory containing GP files and locates the GP "station"
   closest to the specified position.
   If run without arguments the program will request the same pieces
   of information in an itneractive fashion.
   Usage:
      1)Run gppick and interactively specify directory, lon, lat and ID
      2)Put the directory, lon, lat and ID in file inp.gp and run routine
    
   GP station details are put in the file "infofile.txt"
   NB: Uses file names to get closest station

gppick2:
   Similar to gppick, but arguments are specified on the command line. In
   addition gppick2 will look at file contents (not file name!) to get the 
   closest GP "station".
   usage:
      gppick2 <rungen> <lon> <lat> <station ID> <directory>

   GP station details are put in the file "infofile.txt"
   NB:  Uses file contents to get closest station
   NB2: The file <rungen>gprecord.asc must be present in <directory>



gpseries:
   Extracts pre-set variables from a GP file and dumps them in netcdf format.
   It extracts temperature, salinity, currents and current speed for the 
   GP station specified 
   Usage: gpseries rungen infile depthlevel directory
                   rungen    : 3-letter ID of model run
                   infile    : name of gp-file
                   depthlevel: which depth to extract data from
                   directory : where gp data is located

   Output is a netcdf file and a ascii file containing the extracted data
   NB: the file <rungen>gprecord.asc must be present in <directory>

gpseries2:
   Similar to gpseries, but only one variable is extracted (specified as 
   input argument).
   Usage: gpseries2 rungen infile vname depthlevel directory
                   rungen    : 3-letter ID of model run
                   vname     : variable to extract
                   infile    : name of gp-file
                   depthlevel: which depth to extract data from (ignored for 2D data)
                   directory : where gp data is located

   Output is a netcdf file and a ascii file containing the extracted data
   NB: the file <rungen>gprecord.asc must be present in <directory>

gphovmoller:
   Routine exctract hovmoller data for the GP station and dumps it in a netcdf
   file. Variables extracted are temperature, salinity, current lower layer
   interface and current speed. No vertical interpolation is done here.
   Usage: gphovmoller rungen infile  directory
                   rungen    : 3-letter ID of model run
                   infile    : name of gp-file
                   directory : where gp data is located

   Output is a netcdf file  extracted hovmoller data
   NB: the file <rungen>gprecord.asc must be present in <directory>
